{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\camer\\\\Documents\\\\Homework\\\\Book-Search-Engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\camer\\\\Documents\\\\Homework\\\\Book-Search-Engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\camer\\\\Documents\\\\Homework\\\\Book-Search-Engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';import{useMutation,useQuery}from'@apollo/client';import{GET_ME}from'../utils/queries';import{REMOVE_BOOK}from'../utils/mutations';import Auth from'../utils/auth';var SavedBooks=function SavedBooks(){// const [userData, setUserData] = useState({});\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];var _useQuery=useQuery(GET_ME),data=_useQuery.data;var updatedUser=(data===null||data===void 0?void 0:data.user)||{};var _useMutation=useMutation(REMOVE_BOOK),_useMutation2=_slicedToArray(_useMutation,2),removeBook=_useMutation2[0],error=_useMutation2[1].error;// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookId){var _yield$removeBook,data,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return removeBook({variable:{BookId:bookId}});case 2:_yield$removeBook=_context.sent;data=_yield$removeBook.data;_context.prev=4;_context.next=7;return removeBook(bookId);case 7:response=_context.sent;setUserData(updatedUser);// upon success, remove book's id from localStorage\nAuth.removeBook(data.removeBook.token);removeBook(bookId);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](4);console.error(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[4,13]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{fluid:true,className:\"text-light bg-dark\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Viewing saved books!\"))),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?'book':'books',\":\"):'You have no saved books!'),/*#__PURE__*/React.createElement(CardColumns,null,userData.savedBooks.map(function(book){return/*#__PURE__*/React.createElement(Card,{key:book.bookId,border:\"dark\"},book.image?/*#__PURE__*/React.createElement(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,book.title),/*#__PURE__*/React.createElement(\"p\",{className:\"small\"},\"Authors: \",book.authors),/*#__PURE__*/React.createElement(Card.Text,null,book.description),/*#__PURE__*/React.createElement(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);}},\"Delete this Book!\")));}))));};export default SavedBooks;","map":{"version":3,"sources":["C:/Users/camer/Documents/Homework/Book-Search-Engine/client/src/pages/SavedBooks.js"],"names":["React","useState","Jumbotron","Container","CardColumns","Card","Button","useMutation","useQuery","GET_ME","REMOVE_BOOK","Auth","SavedBooks","userData","setUserData","data","updatedUser","user","removeBook","error","handleDeleteBook","bookId","variable","BookId","response","token","console","savedBooks","length","map","book","image","title","authors","description"],"mappings":"ojBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,SAAT,CAAoBC,SAApB,CAA+BC,WAA/B,CAA4CC,IAA5C,CAAkDC,MAAlD,KAAgE,iBAAhE,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,gBAAtC,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,OAASC,WAAT,KAA4B,oBAA5B,CAGA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB;AACA,cAAgCX,QAAQ,CAAC,EAAD,CAAxC,wCAAOY,QAAP,eAAiBC,WAAjB,eAEA,cAAiBN,QAAQ,CAACC,MAAD,CAAzB,CAAQM,IAAR,WAAQA,IAAR,CAGA,GAAMC,CAAAA,WAAW,CAAG,CAAAD,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEE,IAAN,GAAc,EAAlC,CAGA,iBAAgCV,WAAW,CAACG,WAAD,CAA3C,8CAAOQ,UAAP,kBAAqBC,KAArB,kBAAqBA,KAArB,CACA;AACA,GAAMC,CAAAA,gBAAgB,0FAAG,iBAAOC,MAAP,4KACAH,CAAAA,UAAU,CAAC,CAChCI,QAAQ,CAAE,CAACC,MAAM,CAAEF,MAAT,CADsB,CAAD,CADV,wCACfN,IADe,mBACfA,IADe,uCAQEG,CAAAA,UAAU,CAACG,MAAD,CARZ,QAQfG,QARe,eAWrBV,WAAW,CAACE,WAAD,CAAX,CACA;AACAL,IAAI,CAACO,UAAL,CAAgBH,IAAI,CAACG,UAAL,CAAgBO,KAAhC,EAEFP,UAAU,CAACG,MAAD,CAAV,CAfuB,iFAiBtBK,OAAO,CAACP,KAAR,cAjBsB,qEAAH,kBAAhBC,CAAAA,gBAAgB,4CAAtB,CAuBA,mBACE,qDACE,oBAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,oBAA3B,eACE,oBAAC,SAAD,mBACE,qDADF,CADF,CADF,cAME,oBAAC,SAAD,mBACE,8BACGP,QAAQ,CAACc,UAAT,CAAoBC,MAApB,mBACcf,QAAQ,CAACc,UAAT,CAAoBC,MADlC,mBACkDf,QAAQ,CAACc,UAAT,CAAoBC,MAApB,GAA+B,CAA/B,CAAmC,MAAnC,CAA4C,OAD9F,MAEG,0BAHN,CADF,cAME,oBAAC,WAAD,MACGf,QAAQ,CAACc,UAAT,CAAoBE,GAApB,CAAwB,SAACC,IAAD,CAAU,CACjC,mBACE,oBAAC,IAAD,EAAM,GAAG,CAAEA,IAAI,CAACT,MAAhB,CAAwB,MAAM,CAAC,MAA/B,EACGS,IAAI,CAACC,KAAL,cAAa,oBAAC,IAAD,CAAM,GAAN,EAAU,GAAG,CAAED,IAAI,CAACC,KAApB,CAA2B,GAAG,yBAAmBD,IAAI,CAACE,KAAxB,CAA9B,CAA+D,OAAO,CAAC,KAAvE,EAAb,CAA+F,IADlG,cAEE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,MAAaF,IAAI,CAACE,KAAlB,CADF,cAEE,yBAAG,SAAS,CAAC,OAAb,cAA+BF,IAAI,CAACG,OAApC,CAFF,cAGE,oBAAC,IAAD,CAAM,IAAN,MAAYH,IAAI,CAACI,WAAjB,CAHF,cAIE,oBAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAE,yBAAMd,CAAAA,gBAAgB,CAACU,IAAI,CAACT,MAAN,CAAtB,EAAlD,sBAJF,CAFF,CADF,CAaD,CAdA,CADH,CANF,CANF,CADF,CAiCD,CApED,CAsEA,cAAeT,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\n\n\nimport Auth from '../utils/auth';\n\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n  const [userData, setUserData] = useState({});\n\n  const { data } = useQuery(GET_ME)\n  \n  \n  const updatedUser = data?.user || {};\n\n  \n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const { data } = await removeBook({\n      variable: {BookId: bookId }\n    })\n\n   \n\n    try {\n      const response = await removeBook(bookId);\n\n      \n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      Auth.removeBook(data.removeBook.token)\n    \n    removeBook(bookId);\n   } catch (err) {\n     console.error(err);\n   }\n  \n  };\n\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"]},"metadata":{},"sourceType":"module"}